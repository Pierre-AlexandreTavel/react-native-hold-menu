{"version":3,"sources":["useDeviceOrientation.ts"],"names":["useState","useEffect","useMemo","useWindowDimensions","useDeviceOrientation","orientation","setOrientation","height","width","menuWidth","deviceOrientation","windowHeight","windowWidth"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,cAApC;AAIA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAc,WAAd,CAA9C;AAEA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBL,mBAAmB,EAA7C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAK,GAAGD,MAAZ,EAAoB;AAClBD,MAAAA,cAAc,CAAC,UAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC,WAAD,CAAd;AACD;AACF,GANQ,EAMN,CAACC,MAAD,EAASC,KAAT,CANM,CAAT;AAQA,QAAMC,SAAS,GAAGP,OAAO,CAAC,MAAOM,KAAK,GAAG,EAAT,GAAe,GAAtB,EAA2B,CAACA,KAAD,CAA3B,CAAzB;AAEA,SAAO;AACLE,IAAAA,iBAAiB,EAAEL,WADd;AAELM,IAAAA,YAAY,EAAEJ,MAFT;AAGLK,IAAAA,WAAW,EAAEJ,KAHR;AAILC,IAAAA;AAJK,GAAP;AAMD,CArBM;AAuBP,eAAeL,oBAAf","sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\ntype Orientation = 'landscape' | 'portrait';\n\nexport const useDeviceOrientation = () => {\n  const [orientation, setOrientation] = useState<Orientation>('landscape');\n\n  const { height, width } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width < height) {\n      setOrientation('portrait');\n    } else {\n      setOrientation('landscape');\n    }\n  }, [height, width]);\n\n  const menuWidth = useMemo(() => (width * 60) / 100, [width]);\n\n  return {\n    deviceOrientation: orientation,\n    windowHeight: height,\n    windowWidth: width,\n    menuWidth,\n  };\n};\n\nexport default useDeviceOrientation;\n"]}