{"version":3,"sources":["calculations.ts"],"names":["MENU_TEXT_DARK_COLOR","MENU_TEXT_DESTRUCTIVE_COLOR_DARK","MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT","MENU_TEXT_LIGHT_COLOR","MENU_TITLE_COLOR","leftOrRight","menuProps","menuWidth","anchorPositionHorizontal","value","anchorPosition","split","itemWidth","leftPosition","getColor","isTitle","isDestructive","themeValue"],"mappings":"AAEA,SACEA,oBADF,EAEEC,gCAFF,EAGEC,iCAHF,EAIEC,qBAJF,EAKEC,gBALF,QAMO,aANP;AASA,OAAO,MAAMC,WAAW,GAAG,CACzBC,SADyB,EAEzBC,SAFyB,KAGtB;AACH;;AAEA,QAAMC,wBAAwB,GAAGF,SAAS,CAACG,KAAV,CAAgBC,cAAhB,CAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAjC;AACA,QAAMC,SAAS,GAAGN,SAAS,CAACG,KAAV,CAAgBG,SAAlC;AAEA,MAAIC,YAAY,GAAG,CAAnB;AACAL,EAAAA,wBAAwB,KAAK,OAA7B,GACKK,YAAY,GAAG,CAACN,SAAD,GAAaK,SADjC,GAEIJ,wBAAwB,KAAK,MAA7B,GACCK,YAAY,GAAG,CADhB,GAECA,YAAY,GACX,CAACP,SAAS,CAACG,KAAV,CAAgBG,SAAjB,GACAL,SAAS,GAAG,CADZ,GAEAD,SAAS,CAACG,KAAV,CAAgBG,SAAhB,GAA4B,CAPlC;AASA,SAAOC,YAAP;AACD,CApBM;AAsBP,OAAO,MAAMC,QAAQ,GAAG,CACtBC,OADsB,EAEtBC,aAFsB,EAGtBC,UAHsB,KAInB;AACH;;AACA,SAAOF,OAAO,GACVX,gBADU,GAEVY,aAAa,GACbC,UAAU,KAAK,MAAf,GACEhB,gCADF,GAEEC,iCAHW,GAIbe,UAAU,KAAK,MAAf,GACAjB,oBADA,GAEAG,qBARJ;AASD,CAfM","sourcesContent":["import Animated from 'react-native-reanimated';\n\nimport {\n  MENU_TEXT_DARK_COLOR,\n  MENU_TEXT_DESTRUCTIVE_COLOR_DARK,\n  MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT,\n  MENU_TEXT_LIGHT_COLOR,\n  MENU_TITLE_COLOR,\n} from './constants';\nimport type { MenuInternalProps } from './types';\n\nexport const leftOrRight = (\n  menuProps: Animated.SharedValue<MenuInternalProps>,\n  menuWidth: number\n) => {\n  'worklet';\n\n  const anchorPositionHorizontal = menuProps.value.anchorPosition.split('-')[1];\n  const itemWidth = menuProps.value.itemWidth;\n\n  let leftPosition = 0;\n  anchorPositionHorizontal === 'right'\n    ? (leftPosition = -menuWidth + itemWidth)\n    : anchorPositionHorizontal === 'left'\n    ? (leftPosition = 0)\n    : (leftPosition =\n        -menuProps.value.itemWidth -\n        menuWidth / 2 +\n        menuProps.value.itemWidth / 2);\n\n  return leftPosition;\n};\n\nexport const getColor = (\n  isTitle: boolean | undefined,\n  isDestructive: boolean | undefined,\n  themeValue: 'light' | 'dark'\n) => {\n  'worklet';\n  return isTitle\n    ? MENU_TITLE_COLOR\n    : isDestructive\n    ? themeValue === 'dark'\n      ? MENU_TEXT_DESTRUCTIVE_COLOR_DARK\n      : MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT\n    : themeValue === 'dark'\n    ? MENU_TEXT_DARK_COLOR\n    : MENU_TEXT_LIGHT_COLOR;\n};\n"]}