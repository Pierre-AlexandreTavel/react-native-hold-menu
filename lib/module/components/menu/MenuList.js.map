{"version":3,"sources":["MenuList.tsx"],"names":["React","useMemo","StyleSheet","Animated","runOnJS","useAnimatedProps","useAnimatedReaction","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","withTiming","calculateMenuHeight","menuAnimationAnchor","BlurView","MenuItems","SPRING_CONFIGURATION_MENU","HOLD_ITEM_TRANSFORM_DURATION","IS_IOS","CONTEXT_MENU_STATE","styles","useInternal","deepEqual","leftOrRight","MenuListComponent","state","theme","menuProps","disableBlur","AnimatedView","value","createAnimatedComponent","View","itemList","setItemList","useState","menuHeight","itemsWithSeparator","items","filter","item","withSeparator","length","prevList","messageStyles","translate","anchorPosition","itemWidth","_leftPosition","menuScaleAnimation","ACTIVE","duration","opacityAnimation","left","height","opacity","transform","translateX","beginningTransformations","translateY","scale","endingTransformations","animatedInnerContainerStyle","backgroundColor","animatedProps","tint","setter","_items","menuContainer","absoluteFillObject","menuInnerContainer","MenuList","memo"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport Animated, {\n  runOnJS,\n  useAnimatedProps,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport {\n  calculateMenuHeight,\n  menuAnimationAnchor,\n} from '../../utils/calculations';\nimport { BlurView } from 'expo-blur';\n\nimport MenuItems from './MenuItems';\n\nimport {\n  SPRING_CONFIGURATION_MENU,\n  HOLD_ITEM_TRANSFORM_DURATION,\n  IS_IOS,\n  CONTEXT_MENU_STATE,\n} from '../../constants';\n\nimport styles from './styles';\nimport { MenuItemProps } from './types';\nimport { useInternal } from '../../hooks';\nimport { deepEqual } from '../../utils/validations';\nimport { leftOrRight } from './calculations';\n\n// const AnimatedView = Animated.createAnimatedComponent(View);\n\nconst MenuListComponent = () => {\n  const { state, theme, menuProps, disableBlur } = useInternal();\n\n  const AnimatedView = useMemo(\n    () =>\n      disableBlur?.value === false\n        ? Animated.createAnimatedComponent(BlurView)\n        : Animated.View,\n    [disableBlur]\n  );\n\n  const [itemList, setItemList] = React.useState<MenuItemProps[]>([]);\n\n  const menuHeight = useDerivedValue(() => {\n    const itemsWithSeparator = menuProps.value.items.filter(\n      item => item.withSeparator\n    );\n    return calculateMenuHeight(\n      menuProps.value.items.length,\n      itemsWithSeparator.length\n    );\n  }, [menuProps]);\n  const prevList = useSharedValue<MenuItemProps[]>([]);\n\n  const messageStyles = useAnimatedStyle(() => {\n    const itemsWithSeparator = menuProps.value.items.filter(\n      item => item.withSeparator\n    );\n\n    const translate = menuAnimationAnchor(\n      menuProps.value.anchorPosition,\n      menuProps.value.itemWidth,\n      menuProps.value.items.length,\n      itemsWithSeparator.length\n    );\n\n    const _leftPosition = leftOrRight(menuProps);\n\n    const menuScaleAnimation = () =>\n      state.value === CONTEXT_MENU_STATE.ACTIVE\n        ? withSpring(1, SPRING_CONFIGURATION_MENU)\n        : withTiming(0, {\n            duration: HOLD_ITEM_TRANSFORM_DURATION,\n          });\n\n    const opacityAnimation = () =>\n      withTiming(state.value === CONTEXT_MENU_STATE.ACTIVE ? 1 : 0, {\n        duration: HOLD_ITEM_TRANSFORM_DURATION,\n      });\n\n    return {\n      left: _leftPosition,\n      height: menuHeight.value,\n      opacity: opacityAnimation(),\n      transform: [\n        { translateX: translate.beginningTransformations.translateX },\n        { translateY: translate.beginningTransformations.translateY },\n        {\n          scale: menuScaleAnimation(),\n        },\n        { translateX: translate.endingTransformations.translateX },\n        { translateY: translate.endingTransformations.translateY },\n      ],\n    };\n  });\n\n  const animatedInnerContainerStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor:\n        theme.value === 'light'\n          ? disableBlur\n            ? 'rgba(255, 255, 255, 1)'\n            : IS_IOS\n            ? 'rgba(255, 255, 255, .75)'\n            : 'rgba(255, 255, 255, .95)'\n          : disableBlur\n          ? 'rgba(255, 255, 255, 1)'\n          : IS_IOS\n          ? 'rgba(0,0,0,0.5)'\n          : 'rgba(39, 39, 39, .8)',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return { tint: theme.value };\n  }, [theme]);\n\n  const setter = (items: MenuItemProps[]) => {\n    setItemList(items);\n    prevList.value = items;\n  };\n\n  useAnimatedReaction(\n    () => menuProps.value.items,\n    _items => {\n      if (!deepEqual(_items, prevList.value)) {\n        runOnJS(setter)(_items);\n      }\n    },\n    [menuProps]\n  );\n\n  return (\n    <AnimatedView\n      intensity={100}\n      animatedProps={animatedProps}\n      style={[styles.menuContainer, messageStyles]}\n    >\n      <Animated.View\n        style={[\n          StyleSheet.absoluteFillObject,\n          styles.menuInnerContainer,\n          animatedInnerContainerStyle,\n        ]}\n      >\n        <MenuItems items={itemList} />\n      </Animated.View>\n    </AnimatedView>\n  );\n};\n\nconst MenuList = React.memo(MenuListComponent);\n\nexport default MenuList;\n"]}