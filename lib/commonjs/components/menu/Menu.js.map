{"version":3,"sources":["Menu.tsx"],"names":["MenuComponent","state","menuProps","wrapperStyles","anchorPositionVertical","value","anchorPosition","split","top","itemHeight","itemY","left","itemX","width","itemWidth","tY","transformValue","zIndex","CONTEXT_MENU_STATE","ACTIVE","transform","translateY","SPRING_CONFIGURATION","duration","HOLD_ITEM_TRANSFORM_DURATION","styles","menuWrapper","Menu","React","memo"],"mappings":";;;;;;;AAAA;;AAEA;;AAMA;;AAEA;;AACA;;AACA;;;;;;;;AAMA,MAAMA,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuB,yBAA7B;AAEA,QAAMC,aAAa,GAAG,6CAAiB,MAAM;AAC3C,UAAMC,sBAAsB,GAAGF,SAAS,CAACG,KAAV,CAAgBC,cAAhB,CAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAA/B;AAEA,UAAMC,GAAG,GACPJ,sBAAsB,KAAK,KAA3B,GACIF,SAAS,CAACG,KAAV,CAAgBI,UAAhB,GAA6BP,SAAS,CAACG,KAAV,CAAgBK,KAA7C,GAAqD,CADzD,GAEIR,SAAS,CAACG,KAAV,CAAgBK,KAAhB,GAAwB,CAH9B;AAIA,UAAMC,IAAI,GAAGT,SAAS,CAACG,KAAV,CAAgBO,KAA7B;AACA,UAAMC,KAAK,GAAGX,SAAS,CAACG,KAAV,CAAgBS,SAA9B;AACA,UAAMC,EAAE,GAAGb,SAAS,CAACG,KAAV,CAAgBW,cAA3B;AAEA,WAAO;AACLR,MAAAA,GADK;AAELG,MAAAA,IAFK;AAGLE,MAAAA,KAHK;AAILI,MAAAA,MAAM,EAAEhB,KAAK,CAACI,KAAN,KAAgBa,8BAAmBC,MAAnC,GAA4C,GAA5C,GAAkD,CAAC,CAJtD;AAKLC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,UAAU,EACRpB,KAAK,CAACI,KAAN,KAAgBa,8BAAmBC,MAAnC,GACI,uCAAWJ,EAAX,EAAeO,+BAAf,CADJ,GAEI,uCAAW,CAAX,EAAc;AAAEC,UAAAA,QAAQ,EAAEC;AAAZ,SAAd;AAJR,OADS;AALN,KAAP;AAcD,GAzBqB,EAyBnB,CAACtB,SAAD,CAzBmB,CAAtB;AA2BA,sBACE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACuB,gBAAOC,WAAR,EAAqBvB,aAArB;AAAtB,kBACE,6BAAC,iBAAD,OADF,CADF;AAKD,CAnCD;;AAqCA,MAAMwB,IAAI,gBAAGC,eAAMC,IAAN,CAAW7B,aAAX,CAAb;;eAEe2B,I","sourcesContent":["import React from 'react';\n\nimport Animated, {\n  useAnimatedStyle,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport MenuList from './MenuList';\n\nimport styles from './styles';\nimport { useInternal } from '../../hooks';\nimport {\n  HOLD_ITEM_TRANSFORM_DURATION,\n  CONTEXT_MENU_STATE,\n  SPRING_CONFIGURATION,\n} from '../../constants';\n\nconst MenuComponent = () => {\n  const { state, menuProps } = useInternal();\n\n  const wrapperStyles = useAnimatedStyle(() => {\n    const anchorPositionVertical = menuProps.value.anchorPosition.split('-')[0];\n\n    const top =\n      anchorPositionVertical === 'top'\n        ? menuProps.value.itemHeight + menuProps.value.itemY + 8\n        : menuProps.value.itemY - 8;\n    const left = menuProps.value.itemX;\n    const width = menuProps.value.itemWidth;\n    const tY = menuProps.value.transformValue;\n\n    return {\n      top,\n      left,\n      width,\n      zIndex: state.value === CONTEXT_MENU_STATE.ACTIVE ? 999 : -1,\n      transform: [\n        {\n          translateY:\n            state.value === CONTEXT_MENU_STATE.ACTIVE\n              ? withSpring(tY, SPRING_CONFIGURATION)\n              : withTiming(0, { duration: HOLD_ITEM_TRANSFORM_DURATION }),\n        },\n      ],\n    };\n  }, [menuProps]);\n\n  return (\n    <Animated.View style={[styles.menuWrapper, wrapperStyles]}>\n      <MenuList />\n    </Animated.View>\n  );\n};\n\nconst Menu = React.memo(MenuComponent);\n\nexport default Menu;\n"]}