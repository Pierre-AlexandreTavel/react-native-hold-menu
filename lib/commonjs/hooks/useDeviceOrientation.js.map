{"version":3,"sources":["useDeviceOrientation.ts"],"names":["useDeviceOrientation","orientation","setOrientation","height","width","menuWidth","deviceOrientation","windowHeight","windowWidth"],"mappings":";;;;;;;AAAA;;AACA;;AAIO,MAAMA,oBAAoB,GAAG,MAAM;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,qBAAsB,WAAtB,CAAtC;AAEA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoB,uCAA1B;AAEA,wBAAU,MAAM;AACd,QAAIA,KAAK,GAAGD,MAAZ,EAAoB;AAClBD,MAAAA,cAAc,CAAC,UAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC,WAAD,CAAd;AACD;AACF,GAND,EAMG,CAACC,MAAD,EAASC,KAAT,CANH;AAQA,QAAMC,SAAS,GAAG,oBAAQ,MAAOD,KAAK,GAAG,EAAT,GAAe,GAA7B,EAAkC,CAACA,KAAD,CAAlC,CAAlB;AAEA,SAAO;AACLE,IAAAA,iBAAiB,EAAEL,WADd;AAELM,IAAAA,YAAY,EAAEJ,MAFT;AAGLK,IAAAA,WAAW,EAAEJ,KAHR;AAILC,IAAAA;AAJK,GAAP;AAMD,CArBM;;;eAuBQL,oB","sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\ntype Orientation = 'landscape' | 'portrait';\n\nexport const useDeviceOrientation = () => {\n  const [orientation, setOrientation] = useState<Orientation>('landscape');\n\n  const { height, width } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width < height) {\n      setOrientation('portrait');\n    } else {\n      setOrientation('landscape');\n    }\n  }, [height, width]);\n\n  const menuWidth = useMemo(() => (width * 60) / 100, [width]);\n\n  return {\n    deviceOrientation: orientation,\n    windowHeight: height,\n    windowWidth: width,\n    menuWidth,\n  };\n};\n\nexport default useDeviceOrientation;\n"]}